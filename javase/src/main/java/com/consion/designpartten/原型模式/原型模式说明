1.什么是原型模式：不通过new关键字来产生一个对象，而是通过对象复制的方式来实现的模式就叫做原型模式。
    官方定义：用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。
2.为什么使用原型模式
    a.性能好，通过内存二进制流的方式比new对象要块很多。
    b.逃避构造函数约束

3.具体使用方式，利用Cloneable接口和重写clone方法来实现对象的拷贝。

4.使用场景：
    a.资源优化场景，如创建对象需要较多的资源。
    b.性能和安全要求较高的场景，如构造方法为private。
    c.一个对象多个修改者的场景，如例子中的多线程发邮件。

5.注意事项：
    a.构造函数不会被执行。
    b.浅拷贝与深拷贝。
        1).所有实现了Cloneable接口的类都应该用一个共有的方法覆盖clone。
        2).此共有clone方法首先应该调用super.clone()方法。
        3).然后进行修正，将每个成员变量都进行clone方法的调用，非final修饰的成员变量。

    c.另外一种方式就是提供一个拷贝构造器，或者拷贝工厂
        a.拷贝构造器：public Yum(Yum yum);
        b.拷贝工厂类似于构造器的静态工厂：public static Yum newInstance(Yum yum);