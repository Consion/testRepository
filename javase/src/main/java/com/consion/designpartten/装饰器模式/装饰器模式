定义：动态地给一个对象添加一些额外的职责。就增加功能来说，装饰器模式相比生成子类更为灵活。
优点（为什么要用装饰器模式）：继承关系的替代，动态地扩展一个类的功能。
缺点：多层的装饰使比较复杂的，尽量减少装饰类的数量。
使用场景：
    1.需要扩展一个类的功能。
    2.动态的给一个对象增加功能。
    3.需要为一批兄弟类进行改装和加装功能。

最佳实践：装饰器模式使对继承的有力补充，其扩展性很好。