package com.consion.multithread.Java并发编程艺术;

/**
 * volatile定义：允许线程访问共享变量，为了确保变量能被准确和一致地更新，线程应当确保通过排他锁单独获得这个变量，
 * 如果一个字段被volatile修饰，则java内存模型确保所有线程看到的这个变量的值是一致的。
 *
 * volatile确保可见性：
 *      java->字节码->汇编指令->lock前缀指令会在多核处理器下引发2件事情
 *          1.将当前处理器的缓存行回写到主内存
 *          2.回写主内存操作会导致其它CPU缓存了该内存地址的数据无效
 *      通过以上2点来保证各个线程锁看到的该变量值保持一致
 *
 *      嗅探总线（缓存一致性）上面传输的数据来检查自己缓存的值是否已过期，当发现自己缓存行对应的内存地址被修改，则会将当前处理器的缓存行设置为无效状态
 */
public class Test4Volatile {
}
